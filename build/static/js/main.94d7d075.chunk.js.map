{"version":3,"sources":["img/loader.gif","Components/Card.js","Components/Loader.js","Components/CardList.js","Components/Filter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","id","avatar","stars","issues","owner","description","repo_url","repo_name","days","className","key","src","alt","href","target","rel","toUpperCase","Loader","loader","CardList","repos","isLoading","handleScroll","onBottom","map","repo","i","name","html_url","stargazers_count","open_issues","pushed_at","Date","toFixed","avatar_url","login","handleFilter","type","onChange","placeholder","App","state","page","link","setState","fetch","then","response","json","rs","concat","items","event","searchField","value","that","getDate","now","date","d","setDate","getFullYear","getMonth","this","console","log","filteredRepos","filter","includes","Filter","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94d7d075.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.557336d4.gif\";","import React from 'react';\nimport './Card.css';\n\nconst Card = ({ \n        id,\n        avatar,\n        stars,\n        issues, \n        owner, \n        description,\n        repo_url,\n        repo_name,\n        days\n    }) => {\n\n    return(\n        <div className=\"card\" key={ id }>\n            <img src={ avatar } alt=\"profile\" className=\"card-img\"/>\n            <div className=\"card-content\">\n            <div className=\"card-title\">{ owner }</div>\n            <div className=\"card-description\">\n                { description }\n                <a href={ repo_url } target=\"_blank\" rel=\"noopener noreferrer\">\n                    \" { repo_name.toUpperCase() } \"\n                </a>\n            </div>\n            <div className=\"card-extras-info\">\n                <div className=\"stars common\">Stars: { stars }</div>\n                <div className=\"issues common\">Issues: { issues }</div>\n                <div className=\"submitted\">\n                    Submitted { days } days ago by { owner }\n                </div>\n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport loader from '../img/loader.gif';\n\nconst Loader = () => {\n    return (\n        <div>\n            <img src={ loader } alt=\"loader\"/>\n        </div>\n    );\n}\n\nexport default Loader;","import React from 'react';\nimport Card from './Card';\nimport Loader from './Loader';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\n\nconst CardList = ({ repos, isLoading, handleScroll }) => {\n    return (\n        <div className=\"content\">\n            <BottomScrollListener onBottom={ handleScroll }>\n                {\n                    repos.map( ( repo, i ) => {\n                        let {\n                            owner,\n                            name,\n                            description,\n                            html_url,\n                            stargazers_count,\n                            open_issues,\n                            pushed_at\n                        } = repo;\n                        let days = ( \n                            new Date(new Date() - new Date( pushed_at )) /\n                            1000 / 3600 / 24 \n                        ).toFixed();\n\n                        return (\n                            <Card\n                                key         = { i }\n                                avatar      = { owner.avatar_url }\n                                owner       = { owner.login }\n                                description = { description }\n                                repo_url    = { html_url }\n                                repo_name   = { name }\n                                stars       = { stargazers_count }\n                                issues      = { open_issues }\n                                days        = { days } />\n                        )\n                    })\n                }\n                {\n                    isLoading ? <Loader /> : <span></span>\n                }\n            </BottomScrollListener>\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst Loader = ({ handleFilter }) => {\n    return (\n        <div className=\"searchField\">\n            <input \n                type=\"text\" \n                onChange={ handleFilter }\n                placeholder=\"Search For An Owner\"/>\n        </div>\n    );\n}\n\nexport default Loader;","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from './Components/CardList';\nimport Filter from './Components/Filter';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tlet that = this;\n\n\t\tthis.state = {\n\t\t\tpage: 2,\n\t\t\tlink: `https://api.github.com/search/repositories?q=created:>${ \n\t\t\t\tthat.getDate( Date.now(), 30 ) }&sort=stars&order=desc`,\n\t\t\trepos: [],\n\t\t\tisLoading: false,\n\t\t\tsearchField: ''\n\t\t}\n\t}\n\n\tgetDate( date, days ) {\n\t\tlet d = new Date( date );\n\t\td.setDate( d.getDate() - days );\n\t\treturn d.getFullYear() + \n\t\t\t\"-\" + ( \n\t\t\t\td.getMonth() + 1 < 10 ? '0' + \n\t\t\t\t( d.getMonth() + 1 ) : ( d.getMonth() + 1 ) \n\t\t\t\t) +\n\t\t\t\"-\" + ( d.getDate() < 10 ? '0' + d.getDate() : d.getDate() );\n\t}\n\n\thandleScroll = () => {\n\t\tlet { page, link, repos } = this.state;\n\t\tthis.setState({ isLoading: true});\n\n\t\tfetch( link + \"&page=\" + page )\n\t\t.then( response => response.json() )\n\t\t.then( rs => {\n\t\t\t// in case the rate limit is reached we should check the returned value to make sure it contains something or it is empty.\n\t\t\tthis.setState({ \n\t\t\t\trepos: repos.concat( rs.items ? rs.items : [] ),\n\t\t\t\tisLoading: false,\n\t\t\t\tpage: rs.items ? page + 1 : page  \n\t\t\t});\n\t\t})\n\t}\n\n\thandleFilter = ( event ) => {\n\t\tthis.setState({ searchField: event.target.value });\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.setState({ isLoading: true });\n\n\t\tfetch( this.state.link )\n\t\t.then( response => response.json() )\n\t\t.then( rs => {\n\t\t\tconsole.log(rs);\n\t\t\tthis.setState({ repos: rs.items, isLoading: false });\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { searchField, isLoading, repos } = this.state;\n\n\t\tconst filteredRepos = repos.filter(( repo ) => {\n\t\t\treturn repo.owner.login.includes( searchField );\n\t\t});\n\n\t\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<span className=\"github-logo\"></span>\n\t\t\t\t\t<h2>The Most Starred Github Repositories Created In The Last 30 Days</h2>\n\t\t\t\t</div>\n\t\t\t\t<Filter handleFilter = { this.handleFilter } />\n\t\t\t</div>\n\t\t\t<CardList\n\t\t\t\trepos = { filteredRepos }\n\t\t\t\tisLoading = { isLoading }\n\t\t\t\thandleScroll = { this.handleScroll } />\n\t\t</div>\n\t\t)\n\t}  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}